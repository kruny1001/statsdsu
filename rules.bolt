path / {
  read(){true}
  write(){true}
}

path /classes {
  read(){true}
}

path /classes/{id} is Class {
  read(){true}
}

type Class{
  validate() {this.title <= 20}
  title: String,
  description: String
}

//Bolt support the built in datatypes of String, Number, Boolean, Object,
//Any, and Null (Null is useful for specifying optional properties):
//person.bolt
path / is Person;
type Person {
  name:String,
  age: Number,
  isMember: Boolean,

  //Optional data(allows an Object or null/missing value)
  extra:Object | Null
}

path /users/{userId} is User{
  read(){true}
  write(){ isCurrentUser(userId)}
}

path /rooms/{id} is Room;

type User {
  name: NameString,
  age: Number | Null
  isAdmin: Boolean
}

// Define isCurrentUser() function to test if the given user id
// matches the currently signed-in user
isCurrentUser(uid) { auth!=null && auth.uid==uid}

type Room {
  name: NameString,
  creator: String
}

type NameString extends String {
  validate() { this.length >0 && this.length <=32}
}
